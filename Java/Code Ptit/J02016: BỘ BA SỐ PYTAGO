import java.util.Arrays;
import java.util.Scanner;
// Ý tưởng: Tạo mảng gồm các phần tử là bình phương của dãy đã cho rồi sắp xếp mảng đó tăng dần. Sau đó duyệt mảng từ phải sang trái, cố định từng phần tử
cuối và tìm trong dãy bên trái 2 phần tử có tổng = phần tử đó. Để làm đc điều đó, ta sd kỹ thuật mid in middle
public class Neos { 
    public static boolean check(long[] a, int n){
        for(int i=n-1; i>=2; i--){
            int l = 0, r = i - 1;
            while(l <= r){
                if(a[l] + a[r] == a[i]) return true;
                else if(a[l] + a[r] < a[i]) l++;
                else r--;
            }
        }
        return false;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int tc = sc.nextInt();
        for(int t=0; t<tc; t++){
            int n = sc.nextInt();
            long[] a = new long[n];
            for(int i=0; i<n; i++){
                int x = sc.nextInt();
                a[i] = (long)x * x;
            }
            Arrays.sort(a);
            if(check(a, n)) System.out.println("YES");
            else System.out.println("NO");
        }   
    }
}
