#include<bits/stdc++.h> 

using namespace std; 

int hang1, cot1, hang2, cot2;
int dx[8] = {-2, -2, -1, -1, 1, 1, 2, 2};
int dy[8] = {-1, 1, -2, 2, -2, 2, -1, 1};
bool check[9][9];

void solve(){
	queue<pair<pair<int, int>, int>> q;
	q.push({{hang1, cot1}, 0});
	check[hang1][cot1] = 1;
	while(1){
		auto top = q.front(); q.pop();
		int hang = top.first.first, cot = top.first.second;
		int cnt = top.second;
		if(hang == hang2 && cot == cot2){
			cout << cnt << endl;
			break;
		}
		for(int k=0; k<8; k++){
			int hangmoi = hang + dx[k];
			int cotmoi = cot + dy[k];
			if(hangmoi >= 1 && hangmoi <= 8 && cotmoi >= 1 && cotmoi <= 8 && !check[hangmoi][cotmoi]){
				q.push({{hangmoi, cotmoi}, cnt + 1});
				check[hangmoi][cotmoi] = 1;
			}
		}
	}	
}

int main(){ 
	int tc; cin >> tc;
	while(tc--){
		char x, y; int a, b;
		cin >> x >> a >> y >> b;
		cot1 = x - 96, hang1 = 9 - a, cot2 = y - 96, hang2 = 9 - b;
		memset(check, 0, sizeof(check));
		solve();
	}
	return 0;
}
		
