#include<bits/stdc++.h>

using namespace std;

struct node{
	int data;
	node *left;
	node *right;
	node(int x){
		data = x;
		left = right = NULL;
	}
};

void makeRoot(node *root, int u, int v, char c){
	if(c == 'L') root->left = new node(v);
	else root->right = new node(v);
}

void insertRoot(node *root, int u, int v, char c){
	if(root == NULL) return;
	if(root->data == u){
		makeRoot(root, u, v, c);
	}
	else{
		insertRoot(root->left, u, v, c);
		insertRoot(root->right, u, v, c);
	}
}

set<int> se;
int check = 1;
void preorder(node *root, int cnt){
	if(root == NULL) return;
	if(root->left == NULL && root->right == NULL)
		se.insert(cnt);
	if((root->left == NULL && root->right != NULL) || (root->left != NULL && root->right == NULL))
		check = 0;
	if(root->left == NULL && root->right == NULL)
		se.insert(cnt);
	preorder(root->left, cnt + 1);
	preorder(root->right, cnt + 1);
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		int n; cin >> n;
		node *root = NULL;
		for(int i=1; i<=n; i++){
			int u, v; char c;
			cin >> u >> v >> c;
			if(root == NULL){
				root = new node(u);	
				makeRoot(root, u, v, c);
			}
			else{
				insertRoot (root, u, v, c);
			}
		}
		check = 1;
		preorder(root, 0);
		if(check){
			if(se.size() == 1) cout << "Yes\n";
			else cout << "No\n";
		}
		else cout << "No\n";
		se.clear();
	}
	return 0;
}
