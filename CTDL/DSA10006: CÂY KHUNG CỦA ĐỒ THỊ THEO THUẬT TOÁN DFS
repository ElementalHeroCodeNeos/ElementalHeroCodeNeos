#include<bits/stdc++.h>

using namespace std;

int n, m, s;
vector<int> ke[1001];
bool visited[1001];
vector<pair<int, int>> res;

void DFS(int u){
	visited[u] = true;
	for(int v : ke[u]){
		if(!visited[v]){
			res.push_back({u, v});
			DFS(v);
		}
	}
}

void solve(){
	DFS(s);
	if(res.size() != n - 1){
		cout << "-1\n";
		return;
	}
	for(auto it : res){
		cout << it.first << " " << it.second << endl;
	}	
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		cin >> n >> m >> s;
		for(int i=1; i<=m; i++){
			int x, y; cin >> x >> y;
			ke[x].push_back(y);
			ke[y].push_back(x);
		}
		solve();
		for(int i=1; i<=n; i++){
			ke[i].clear();
		}
		memset(visited, false, sizeof(visited));	
		res.clear();
	}
	return 0;
}	
