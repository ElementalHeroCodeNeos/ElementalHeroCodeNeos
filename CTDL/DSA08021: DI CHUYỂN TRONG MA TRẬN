#include<bits/stdc++.h> 

using namespace std;

int n, m, a[1001][1001];

void BFS(){
	queue<pair<pair<int, int>, int>> q;
	q.push({{1, 1}, 0});
	set<pair<int, int>> se;
	se.insert({1, 1});
	while(!q.empty()){
		auto it = q.front(); q.pop();
		int i = it.first.first, j = it.first.second;
		int cnt = it.second;
		if(i == n && j == m){
			cout << cnt << endl;
			return;
		}
		if(j + a[i][j] <= m && !se.count({i, j + a[i][j]})){
			q.push({{i, j + a[i][j]}, cnt + 1});
			se.insert({i, j + a[i][j]});
		}
		if(i + a[i][j] <= n && !se.count({i + a[i][j], j})){
			q.push({{i + a[i][j], j}, cnt + 1});
			se.insert({i + a[i][j], j});
		}	
	}
	cout << "-1\n";
}

int main(){ 
	int tc; cin >> tc;
	while(tc--){
		cin >> n >> m;
		for(int i=1; i<=n; i++){
			for(int j=1; j<=m; j++){
				cin >> a[i][j];
			}
		}
		BFS();
	}
	return 0;
}
