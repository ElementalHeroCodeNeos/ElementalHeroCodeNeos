#include <bits/stdc++.h>

using namespace std;

int n, m, a[1001][1001];
bool used[1001][1001];

void nhap(){
	cin >> n >> m;
	for(int i=0; i<n; i++){
		for(int j=0; j<m; j++){
			cin >> a[i][j];
		}
	}
}

void solve(){
	memset(used, 0, sizeof(used));
	queue<pair<pair<int, int>, int>> q;
	q.push({{0, 0}, 0});
	while(!q.empty()){
		pair<pair<int, int>, int> top = q.front(); q.pop();
		int i = top.first.first, j = top.first.second;
		int step = top.second;
		used[i][j] = 1;
		if(i == n - 1 && j == m - 1){
			cout << step << endl;
			return;
		}
		if(j + a[i][j] < m && !used[i][j + a[i][j]]){
			q.push({{i, j + a[i][j]}, step + 1});
		}
		if(i + a[i][j] < n && !used[i + a[i][j]][j]){
			q.push({{i + a[i][j], j}, step + 1});
		}
	}
	cout << "-1\n";	
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		nhap();
		solve();
	}
	return 0;
}
