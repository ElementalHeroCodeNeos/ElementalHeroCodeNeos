#include<bits/stdc++.h>

using namespace std;
// Ý tưởng: Cây là đồ thị vô hướng n đỉnh có: (n - 1) cạnh, không có chu trình, liên thông và luôn có đường đi giữa 2 đỉnh u, v bất kì. Do vậy, để kiểm tra đồ thị vô hướng có phải cây ta chỉ cần kiểm tra điều kiện 1 và 2 hoặc 1 và 3
int n, m;
vector<int> ke[1001];
bool visited[1001];

void DFS(int u){
	visited[u] = true;
	for(int v : ke[u]){
		if(!visited[v]){
			DFS(v);
		}
	}
} 

int tplt(){
	int cnt = 0;
	for(int i=1; i<=n; i++){
		if(!visited[i]){
			cnt++;
			DFS(i);
		}
	}
	return cnt;
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		cin >> n;
		for(int i=1; i<=n-1; i++){
			int x, y; cin >> x >> y;
			ke[x].push_back(y);
			ke[y].push_back(x);
		}
		if(tplt() == 1) cout << "YES\n";
		else cout << "NO\n";
		for(int i=1; i<=n; i++){
			ke[i].clear();
		}
		memset(visited, false, sizeof(visited));
	}
	return 0;
}
