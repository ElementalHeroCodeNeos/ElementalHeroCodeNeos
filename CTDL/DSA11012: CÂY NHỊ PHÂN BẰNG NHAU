#include<bits/stdc++.h>

using namespace std;

struct node{
	int data;
	node *left;
	node *right;
	node(int x){
		data = x;
		left = right = NULL;
	}
};

void makeRoot(node *root, int u, int v, char c){
	if(c == 'L') root->left = new node(v);
	else root->right = new node(v); 
}

void insertNode(node *root, int u, int v, char c){
	if(root == NULL) return;
	if(root->data == u)
		makeRoot(root, u, v, c);
	else{
		insertNode(root->left, u, v, c);
		insertNode(root->right, u, v, c);
	}
}

void nhap(node *&root){
	int n; cin >> n;
	for(int i=1; i<=n; i++){
		int u, v; char c;
		cin >> u >> v >> c;
		if(root == NULL){
			root = new node(u);
			makeRoot(root, u, v, c);
		}
		else{
			insertNode(root, u, v, c);
		}
	}
}

bool check(node *root1, node *root2){
	if(root1 == NULL && root2 == NULL) return true;
	if(root1 == NULL || root2 == NULL) return false;
	if(root1->data != root2->data) return false;
	return check(root1->left, root2->left) && check(root1->right, root2->right);
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		node *root1 = NULL;
		node *root2 = NULL;
		nhap(root1);
		nhap(root2);
		cout << check(root1, root2) << endl;
	}
	return 0;
}
