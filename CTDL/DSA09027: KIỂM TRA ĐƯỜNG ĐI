#include<bits/stdc++.h>

using namespace std;

int n, m;
int parent[1001];  
int sz[1001];

int Find(int u){  
	if(u == parent[u]) return u;
	return parent[u] = Find(parent[u]);
}

void Union(int u, int v){  
	u = Find(u);
	v = Find(v);
	if(u == v) return;
	if(sz[u] < sz[v]){
		swap(u, v);
	}
	sz[u] += sz[v];
	parent[v] = u;
}

void ktao(){
	for(int i=1; i<=n; i++){
		parent[i] = i;
		sz[i] = 1;
	}
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		cin >> n >> m;
		ktao();
		for(int i=1; i<=m; i++){
			int x, y; cin >> x >> y;
			Union(x, y);
		}
		int Q; cin >> Q;
		while(Q--){
			int x, y; cin >> x >> y;
			if(Find(x) == Find(y)) cout << "YES\n";
			else cout << "NO\n";
		}
	}
	return 0;
}






