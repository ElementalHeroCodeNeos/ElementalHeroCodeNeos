#include<bits/stdc++.h>

using namespace std;

int n, m, a[501][501];

int dx[4] = {-1, 0, 0, 1};
int dy[4] = {0, -1, 1, 0};

void Dijkstra(){
	int d[501][501];
	for(int i=1; i<=n; i++){
		for(int j=1; j<=m; j++){
			d[i][j] = 1e9;
		}
	}
	d[1][1] = a[1][1];
	priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> q;
	q.push({d[1][1], {1, 1}});
	while(!q.empty()){
		auto top = q.top(); q.pop();
		int kc = top.first;
		int i = top.second.first, j = top.second.second;
		if(kc > d[i][j]) continue;
		for(int k=0; k<4; k++){
			int i1 = i + dx[k];
			int j1 = j + dy[k];
			if(i1 >= 1 && i1 <= n && j1 >= 1 && j1 <= m){
				if(d[i1][j1] > d[i][j] + a[i1][j1]){
					d[i1][j1] = d[i][j] + a[i1][j1];
					q.push({d[i1][j1], {i1, j1}});
				}
			}
		}
	}
	cout << d[n][m] << endl;
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		cin >> n >> m;
		for(int i=1; i<=n; i++){
			for(int j=1; j<=m; j++){
				cin >> a[i][j];
			}
		}
		Dijkstra();
	}
	return 0;
}
