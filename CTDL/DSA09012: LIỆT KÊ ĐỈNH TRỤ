#include<bits/stdc++.h>

using namespace std;

int n, m;
vector<int> ke[1001];
bool visited[1001];

void DFS(int u){
	visited[u] = true;
	for(int v : ke[u]){
		if(!visited[v]){
			DFS(v);
		}
	}
}

int tplt(){
	int cnt = 0;
	for(int i=1; i<=n; i++){
		if(!visited[i]){
			cnt++;
			DFS(i);
		}
	}
	return cnt;	
}

void dinh_tru(){
	int cc = tplt();
	for(int i=1; i<=n; i++){
		memset(visited, false, sizeof(visited));
		visited[i] = true;
		if(cc < tplt()){
			cout << i << " ";
		}
	}
	cout << endl;	
}

int main(){
	int tc; cin >> tc;
	while(tc--){
		cin >> n >> m;
		for(int i=1; i<=m; i++){
			int x, y; cin >> x >> y;
			ke[x].push_back(y);
			ke[y].push_back(x);
		}
		dinh_tru();
		for(int i=1; i<=n; i++){
			ke[i].clear();
		}
		memset(visited, false, sizeof(visited));
	}
	return 0;
}
