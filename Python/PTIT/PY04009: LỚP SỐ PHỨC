import math

class SoPhuc:
    def __init__(self, thuc, ao):
        self.thuc = thuc
        self.ao = ao
    def __add__(self, other):
        thuc = self.thuc + other.thuc
        ao = self.ao + other.ao
        return SoPhuc(thuc, ao)
    def __mul__(self, other):
        thuc = self.thuc * other.thuc - self.ao * other.ao
        ao = self.thuc * other.ao + self.ao * other.thuc
        return SoPhuc(thuc, ao)
    def __str__(self):
        if self.ao >= 0:
            return f'{self.thuc} + {self.ao}i'
        return f'{self.thuc} - {-self.ao}i'

if __name__ == '__main__':
    tc = int(input())
    for _ in range(tc):
        a = list(map(int, input().split()))
        A = SoPhuc(a[0], a[1])
        B = SoPhuc(a[2], a[3])
        print((A + B) * A, end = ', ')
        print((A + B) * (A + B))
